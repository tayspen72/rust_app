//==============================================================================
// Notes
//==============================================================================
// drivers::led.rs
// Wrapper around the gpio pins to control an LED 

//==============================================================================
// Crates and Mods
//==============================================================================
use crate::config;
use crate::mcu::gpio;

//==============================================================================
// Enums, Structs, and Types
//==============================================================================


//==============================================================================
// Macros
//==============================================================================


//==============================================================================
// Variables
//==============================================================================


//==============================================================================
// Implementations
//==============================================================================
pub fn init(p: &nrf52832_pac::Peripherals) {
	for i in 0..config::LED_PIN.len() {
		gpio::pin_setup(p, config::LED_PIN[i], gpio::PinDirection::Output, gpio::PinPull::PullDisabled, gpio::PinState::PinHigh);
	}
}

//==============================================================================
// Interrupt Handler
//==============================================================================


//==============================================================================
// Task Handler
//==============================================================================
pub fn set_led(p: &nrf52832_pac::Peripherals, led: u8, state: gpio::PinState) {
	gpio::set_pin_state(p, config::LED_PIN[led as usize], state);
}
