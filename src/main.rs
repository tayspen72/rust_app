//==============================================================================
// Notes
//==============================================================================
// main.rs

//==============================================================================
// Crates and Mods
//==============================================================================
#![no_std]
#![no_main]

use cortex_m_rt::entry;
use nrf52832_pac;
use panic_halt as _; // Breakpoint on `rust_begin_unwind` to catch panics

mod config;
mod drivers;
use drivers::*;
mod mcu;

//==============================================================================
// Enums, Structs, and Types
//==============================================================================


//==============================================================================
// Macros
//==============================================================================


//==============================================================================
// Variables
//==============================================================================


//==============================================================================
// Implementations
//==============================================================================
#[entry]
fn main() -> ! {
	let peripherals = nrf52832_pac::Peripherals::take().unwrap();

	app_init(&peripherals);
	
	loop {
		app_task_handler(&peripherals);
	};
}

fn app_init(p: &nrf52832_pac::Peripherals) {
	button::init(p);
	led::init(p);
	ht16k33::init(p);
	debug::init(p);
}

//==============================================================================
// Interrupt Handler
//==============================================================================


//==============================================================================
// Task Handler
//==============================================================================
fn app_task_handler(p: &nrf52832_pac::Peripherals) {
	button::task_handler(p);

	debug::task_handler();
}
